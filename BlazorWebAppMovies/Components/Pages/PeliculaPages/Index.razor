@page "/peliculas"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using BlazorWebAppMovies
@using BlazorWebAppMovies.Data
@implements IAsyncDisposable
@inject IDbContextFactory<BlazorWebAppMovies.Data.BlazorWebAppMoviesContext> DbFactory
@rendermode InteractiveServer

<PageTitle>Index</PageTitle>

<h1>Index</h1>
<div>
    <input type="search" @bind="filtroTitulo" @bind:event="oninput" />
</div>

<p>
    <a href="peliculas/create">Create New</a>
</p>

<div>
    <QuickGrid Class="table" Items="PeliculasFiltradas" Pagination="pagination">
        <PropertyColumn Property="pelicula => pelicula.Titulo" Sortable="true" />
        <PropertyColumn Property="pelicula => pelicula.FechaPublicacion" Title="Lanzamiento" />
        <PropertyColumn Property="pelicula => pelicula.Genero" />
        <PropertyColumn Property="pelicula => pelicula.Precio" />
        <PropertyColumn Property="pelicula => pelicula.Clasificacion" />

        <TemplateColumn Context="pelicula">
            <a href="@($"peliculas/edit?id={pelicula.Id}")">Edit</a> |
            <a href="@($"peliculas/details?id={pelicula.Id}")">Details</a> |
            <a href="@($"peliculas/delete?id={pelicula.Id}")">Delete</a>
        </TemplateColumn>
    </QuickGrid>
</div>
<Paginator State="pagination"></Paginator>

@code {
    private string filtroTitulo = string.Empty;
    private IQueryable<Pelicula> PeliculasFiltradas => context.Pelicula.Where(m => m.Titulo!.Contains(filtroTitulo));

    private PaginationState pagination = new PaginationState { ItemsPerPage = 5 };


    private BlazorWebAppMoviesContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
